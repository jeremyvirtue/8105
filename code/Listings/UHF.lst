C51 COMPILER V9.53.0.0   UHF                                                               04/28/2020 09:38:51 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE UHF
OBJECT MODULE PLACED IN .\Objects\UHF.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\UHF.c OMF2 ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\Us
                    -er\Drive) DEBUG PRINT(.\Listings\UHF.lst) OBJECT(.\Objects\UHF.obj)

line level    source

   1          #include "UHF.h" 
   2          #include "System.h"
   3          #include "Lcd.h"
   4          #include "kt_0646m.h" 
   5          #include "RCC.h"
   6          #include "Flash.h"
   7          #include "LcdDis.h"
   8          #include "ADC.h"
   9          
  10          UHFDATA xdata u_dat;
  11          
  12          void UhfDataInit(void)
  13          {
  14   1      //      u_dat.channel = 1;
  15   1      //      u_dat.vol         = KT_FS_VOL;
  16   1      //      u_dat.id          = 0;
  17   1              ReadData();
  18   1              if(AB)
  19   1                      u_dat.ab = 1;
  20   1              else
  21   1                      u_dat.ab = 0; 
  22   1      }
  23          
  24          void ChAdd(void)
  25          {
  26   1              u_dat.channel++;
  27   1              if(u_dat.channel>CHMAX)
  28   1              {
  29   2                      u_dat.channel = CHMIN;
  30   2              }
  31   1      }
  32          
  33          void ChLess(void)
  34          {       
  35   1              if(u_dat.channel==CHMIN)
  36   1              {
  37   2                      u_dat.channel = CHMAX;
  38   2              }
  39   1              else
  40   1                      u_dat.channel--;
  41   1      
  42   1      }
  43          
  44          void VolAdd(void)
  45          {
  46   1              u_dat.vol++;
  47   1              if(u_dat.vol  > VOLMAX)
  48   1              {
  49   2                      u_dat.vol = VOLMAX;
  50   2              }
  51   1      }
  52          
  53          void VolLess(void)
  54          {       
C51 COMPILER V9.53.0.0   UHF                                                               04/28/2020 09:38:51 PAGE 2   

  55   1              if(u_dat.vol  == VOLMIN)
  56   1              {
  57   2                      u_dat.vol = VOLMIN; 
  58   2              }
  59   1              else
  60   1                      u_dat.vol--; 
  61   1              
  62   1      }
  63          
  64          void EqAdd(void)
  65          {
  66   1              u_dat.eq++;
  67   1              if(u_dat.eq  > EQMAX)
  68   1              {
  69   2                      u_dat.eq = EQMIN;
  70   2              }
  71   1      }
  72          
  73          void EqLess(void)
  74          {       
  75   1              if(u_dat.eq  == EQMIN)
  76   1              {
  77   2                      u_dat.eq = EQMAX; 
  78   2              }
  79   1              else
  80   1                      u_dat.eq--; 
  81   1              
  82   1      }
  83          
  84          void SetEqApi(u8 eq)
  85          {
  86   1              switch(eq)
  87   1              {
  88   2                      case 0:
  89   2                              
  90   2                      break;
  91   2              }
  92   1      }
  93          
  94          u32 SetFreq(void)
  95          {
  96   1              u32 freq;
  97   1              freq = ((u32)u_dat.channel * FREQ_INC) + FREQA_INIT;
  98   1              return freq; 
  99   1      }
 100          
 101          void FreqTune(u32 freq)
 102          { 
 103   1              KT_WirelessMicTx_Pilot(PILOT_DISABLE);  //关闭导频      
 104   1              Delay_ms(100);
 105   1              KT_WirelessMicTx_Tune(freq);
 106   1              KT_WirelessMicTx_Pilot(PILOT_ENABLE);   //开启导频
 107   1              AuxDataEnSw(Disable);                                   //关Aux数据发送使能
 108   1              AuxDataEnSw(Enable);                                    //开Aux数据发送使能
 109   1       
 110   1      }
 111          
 112          void SetPubFreq()
 113          {
 114   1              FreqTune(FREQA_PUB);
 115   1              if(u_dat.ab)
 116   1              {
C51 COMPILER V9.53.0.0   UHF                                                               04/28/2020 09:38:51 PAGE 3   

 117   2                      FreqTune(FREQB_PUB); 
 118   2              }
 119   1              else
 120   1              {
 121   2                      FreqTune(FREQA_PUB); 
 122   2              }
 123   1      }
 124          
 125          
 126           void KT0646mInit(void)
 127          {       
 128   1              uint32_t count;
 129   1              UhfDataInit();
 130   1              CHIP_EN_OUT;
 131   1              CHIP_EN = Enable; 
 132   1              count = 80000;
 133   1              while(KT_Bus_Read46(0x01) != 0x4B54)            //Read Manufactory ID 
 134   1              {
 135   2                      count--;
 136   2                      if(!count)
 137   2                      { 
 138   3                              ShowNumber(8888);
 139   3                              break;
 140   3                      }
 141   2              } 
 142   1              KT_WirelessMicTx_Init(SetFreq()); 
 143   1              KT_WirelessMicTx_Mic_Sens(u_dat.vol); 
 144   1              KT_WirelessMicTx_MuteSel(AUDIO_UNMUTE);         //开启声音
 145   1              BPSKMode(order1);        
 146   1      }
 147          
 148          void ReadData(void)
 149          {
 150   1              if(FlashCheck())
 151   1              {
 152   2                      u_dat.channel = FlashRead(FLASH_ID_CHANNEL);
 153   2                      u_dat.vol = FlashRead(FLASH_ID_VOLUME);
 154   2                      u_dat.id = FlashRead(FLASH_ID_SYSTEMID);
 155   2                      u_dat.automute =  FlashRead(FLASH_AUTOMUTE);
 156   2                      u_dat.eq =  FlashRead(FLASH_ID_EQ);
 157   2              }
 158   1              else
 159   1              {
 160   2                      u_dat.channel = 1;
 161   2                      u_dat.vol = KT_FS_VOL;
 162   2                      u_dat.id = 0;
 163   2                      u_dat.automute = 1;
 164   2                      u_dat.eq = 0;
 165   2                      FlashWrite(FLASH_ID_MASK,FLASH_MASK);
 166   2                      FlashWrite(FLASH_ID_MASK1,FLASH_MASK);
 167   2                      SaveData();
 168   2              }
 169   1      }
 170          
 171           
 172          
 173          void SaveData(void)
 174          {
 175   1              FlashWrite(FLASH_ID_CHANNEL,u_dat.channel);
 176   1              FlashWrite(FLASH_ID_VOLUME,u_dat.vol);
 177   1              FlashWrite(FLASH_ID_SYSTEMID,u_dat.id);
 178   1              FlashWrite(FLASH_AUTOMUTE,u_dat.automute);
C51 COMPILER V9.53.0.0   UHF                                                               04/28/2020 09:38:51 PAGE 4   

 179   1              FlashWrite(FLASH_ID_EQ,u_dat.eq);
 180   1      }
 181          
 182          
 183          u16  xdata BPSKbuf[4]={0,0,0,0};
 184          
 185           
 186          
 187          void CleanBPSK()
 188          {
 189   1              BPSKbuf[0] = 0x0000;
 190   1              BPSKbuf[1] = 0x0000;
 191   1              BPSKbuf[2] = 0x0000;
 192   1              BPSKbuf[3] = 0x0000;    
 193   1      }
 194          void BPSKMode(BPSKOrder order)
 195          {
 196   1              CleanBPSK();
 197   1              BPSKbuf[0] |= order<<12;
 198   1              if(u_dat.ab)
 199   1                      BPSKbuf[0] |= 3<<8;//品牌号
 200   1              else     
 201   1                      BPSKbuf[0] |= 2<<8;//品牌号
 202   1              BPSKbuf[0] |= u_dat.vol;//音量值 0-31
 203   1              BPSKbuf[1] |= ((SetFreq()/100)>>8)<<8;
 204   1              BPSKbuf[1] |= 0xff - ((SetFreq()/100)>>8);
 205   1              BPSKbuf[2] |= (SetFreq()/100)<<8;
 206   1              BPSKbuf[2] |= 0xff - ((SetFreq()/100)&0x00ff);
 207   1              BPSKbuf[3] |= ((u16)u_dat.id)<<8;
 208   1              BPSKbuf[3] |= 0xff - u_dat.id;
 209   1              KTWriteBPSK(BPSKbuf);
 210   1      }
 211          
 212          void AutoMute()
 213          {       //1开0关
 214   1              if(u_dat.automute)
 215   1              {
 216   2                      if(KT_WirelessMicTxCheckVolume() && Sdata.state == READY)
 217   2                      {
 218   3                              if(u_dat.automute_time > 300)//开导频
 219   3                              {
 220   4                                      KT_WirelessMicTx_MuteSel(AUDIO_UNMUTE);
 221   4                                      KT_WirelessMicTx_PASW(PA_ON); 
 222   4                                      ChannelDis();
 223   4                              }
 224   3                              else if(u_dat.automute_time > 10)//开声音
 225   3                              {
 226   4                                      KT_WirelessMicTx_MuteSel(AUDIO_UNMUTE);
 227   4                                      ChannelDis();
 228   4                              }
 229   3                              u_dat.automute_time = 0;
 230   3                      }
 231   2                      else if(Sdata.state != READY)
 232   2                              u_dat.automute_time = 0;
 233   2              } 
 234   1      }
 235          
 236          void AutoMuteDelay(void)
 237          { 
 238   1              if(u_dat.automute)
 239   1              {
 240   2                      u_dat.automute_time++; 
C51 COMPILER V9.53.0.0   UHF                                                               04/28/2020 09:38:51 PAGE 5   

 241   2              }
 242   1              
 243   1       
 244   1              if(u_dat.automute_time == 10 && Sdata.state == READY)
 245   1              {
 246   2                              KT_WirelessMicTx_MuteSel(AUDIO_MUTE);//静音
 247   2              }
 248   1              else if(u_dat.automute_time == 300 && Sdata.state == READY)
 249   1              {
 250   2                      KT_WirelessMicTx_PASW(PA_OFF);//关导频
 251   2              }
 252   1              else if(u_dat.automute_time == 900 && Sdata.state == READY)
 253   1              {
 254   2                      SysState(SHUTDOWN);//关机
 255   2              } 
 256   1              
 257   1      }
 258          
 259          
 260          void GetVat()
 261          {
 262   1              u16 val;
 263   1              val = Adc_Read();
 264   1              ShowNumber(val);
 265   1      }
 266          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    894    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     19    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       8
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
