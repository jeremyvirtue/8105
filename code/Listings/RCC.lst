C51 COMPILER V9.53.0.0   RCC                                                               07/14/2020 15:32:53 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE RCC
OBJECT MODULE PLACED IN .\Objects\RCC.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\Drive\RCC.c OMF2 ROM(COMPACT) OPTIMIZE(8,SPEED) BROWSE INCDIR(.\Use
                    -r;.\User\Drive) DEBUG PRINT(.\Listings\RCC.lst) OBJECT(.\Objects\RCC.obj)

line level    source

   1          #include "RCC.h" 
   2          #include "System.h"
   3          #include "Lcd.h"
   4          #include "KeyBoard.h"
   5          #include "OS.h"
   6          #include <intrins.h>
   7          #include "UHF.h"
   8          
   9          void Delay_us(unsigned int i)
  10          {               //延时US 不准确  10 =37us
  11   1              unsigned int j;
  12   1              for(j=0;j<i;j++);
  13   1      }
  14          
  15          void Delay_ms(unsigned int i)
  16          {//基本准确
  17   1              u16     j;
  18   1              while(i)
  19   1              {
  20   2                      for(j=0; j<=600; j++)
  21   2                      {
  22   3                              ;
  23   3                      }
  24   2                      i--;
  25   2              }
  26   1      }
  27          
  28           void Clr_wag(void)
  29          {
  30   1              WDTCLR0 = 0X00;
  31   1          WDTCLR1 = 0X00;
  32   1              WDTCLR0 = 0X53;
  33   1          WDTCLR1 = 0XAC;                
  34   1      }
  35          
  36          
  37          //------------------------------------------------------------------------
  38          /*              时钟设置 
  39          */
  40          //      分频选择
  41          void MclkDiv1()         
  42          {
  43   1              u8 data temp;
  44   1              temp = MCKDIV&0xfc;
  45   1              temp |= MCLK_DIV1;
  46   1              WPKEY = 0x37;
  47   1              MCKDIV = temp;  //不分频
  48   1      }
  49          
  50          
  51          void MCLKToRCH()
  52          {
  53   1              u8 data temp;
  54   1              temp = MCKDIV&0xfb;     //bit2 = 0 : 使用内部RCH作为系统时钟源          
C51 COMPILER V9.53.0.0   RCC                                                               07/14/2020 15:32:53 PAGE 2   

  55   1              WPKEY = 0x37;
  56   1              MCKDIV = temp;  
  57   1              while((MCKDIV&0x04) != 0x00);           //切换到RCH时读取MCKS = 0,表示切换成功
  58   1              Delay_us(10);
  59   1              MclkDiv1();
  60   1              
  61   1      }
  62          
  63          
  64          //----------------------------------------------------------
  65          //函 数 名：PORT_Init
  66          //功能描述：MCU端口初始化
  67          //函数说明：Configure the Crossbar and GPIO ports.
  68          //调用函数：
  69          //全局变量：无
  70          //输    入：
  71          //返    回：无
  72          //设 计 者：周文波                              时间：2016.01.12
  73          //修 改 者：                                    时间：
  74          //版    本：V1.0                                
  75          //----------------------------------------------------------
  76          void IO_init(void) 
  77          {
  78   1              IO_DeInit();
  79   1              IO_Initailize();
  80   1              //***************************
  81   1              //初始化E2
  82   1              //**************************
  83   1              FlashAddrH = 0x00;
  84   1              FlashCLKDiv = 25;               //MCLK 4MHz  
  85   1      }
  86            
  87          
  88          void Tim1Init(void)
  89          {
  90   1              xTIMPRS &= 0x8f; 
  91   1              xTIMPRS |= 0xf0;   //111：T1 工作时钟为 FCLK/256（默认）。
  92   1              TMOD &= 0xcf;
  93   1              TMOD |= 0x20;           //8bit自动加载
  94   1              TR1 = 0;
  95   1              TH1 = 253;      //(256-253)*256/8M = 200us
  96   1              TL1 = 253;      
  97   1              IP |= 0x08;        //T1高优先级
  98   1              TR1 = 1;
  99   1              ET1 = 1;
 100   1              EA = 1;
 101   1      }
 102          
 103          
 104          
 105          void Tim1IRQ(void) interrupt 3 
 106          {               
 107   1              if(Sdata.state != S_INIT)
 108   1                      LcdScan();
 109   1              else
 110   1                      LcdClose();
 111   1      }
 112          
 113          /*        系统心跳定时器
 114          *   用TIM0定时5MS作系统心跳定时器
 115          *   SysClk = 8MHz
 116          */
C51 COMPILER V9.53.0.0   RCC                                                               07/14/2020 15:32:53 PAGE 3   

 117          void SystemTimInit(void)
 118          {
 119   1              xTIMPRS &= 0xf8; 
 120   1              xTIMPRS |= 0x07;   //111：T0 工作时钟为 FCLK/256。
 121   1              TMOD &= 0xf0;
 122   1              TMOD |= 0x02;           //8bit自动加载
 123   1              TR0 = 0;
 124   1              TH0 = 98;       //值+ Time- LBS=0.032MS
 125   1              TL0 = 98;       
 126   1              IP &= 0xFD;      
 127   1              TF0 = 1;//有T0溢出中断请求产生
 128   1              TR0 = 1;//开启定时器0
 129   1              ET0 = 1;
 130   1              EA = 1;//开启中断
 131   1              
 132   1      }
 133          
 134           
 135          void SystemTimIRQ(void) interrupt 1 
 136          {
 137   1              static u8 count = 0;
 138   1              count++;
 139   1              if(count == 4 )//20ms
 140   1              {
 141   2                      count =0 ;
 142   2                        KeyScan();
 143   2              }
 144   1              if(Sdata.s_delay>0)
 145   1                      Sdata.s_delay--;
 146   1              OSTick();
 147   1              Clr_wag();       //看门狗复位
 148   1               
 149   1      }
 150          
 151          
 152          
 153          /**********************************************
 154                   Extern interrupt0 initailize
 155          ***********************************************/
 156          void Extern0_init(void)
 157          {
 158   1      //      xIOMUX1  &= 0xFE;               //INT0RMP=0;    select P00 as INT0 sourc
 159   1              xIOMUX1  |= 0x01;               //INT0RMP=1;    select P50 as INT0 sourc
 160   1              EX0 = 1;
 161   1              IT0 = 1;                //ex1下降沿触发 
 162   1              EX1 = 1;
 163   1              IT1 = 1;
 164   1      //      EINTCS0  = 0x10;                //en ex0, ex0下降沿触发 
 165   1              EINTCS0  = 0x38;
 166   1      //      00101000
 167   1      //      00010000
 168   1      }
 169          
 170          void Extern1_init(void)
 171          {
 172   1              EX1 = 1;
 173   1              IT1 = 1;                //ex1高电平触发
 174   1              EINTCS0 = 0x28; //  ex0下降沿触发 
 175   1              EA = 1;
 176   1      }
 177          
 178          
C51 COMPILER V9.53.0.0   RCC                                                               07/14/2020 15:32:53 PAGE 4   

 179          /**********************************************
 180                   Extern interrupt0 sever funtion 
 181          ***********************************************/
 182          void Extint0(void) interrupt 0
 183          {
 184   1              if(EINTCS0 & 0x01 )
 185   1              { 
 186   2                      EINTCS0 = 0x38; //bit 4 Disable INT0 intterrup   
 187   2                      Sdata.stop_time = 5;
 188   2                       
 189   2                      _nop_();
 190   2              }
 191   1      }
 192          
 193          void Extint1(void) interrupt 2
 194          {
 195   1              if(EINTCS0 & 0x02 )
 196   1              {
 197   2                      EINTCS0 = 0x38; //en ex0, ex0下降沿触发  
 198   2                      Sdata.stop_time = 5; 
 199   2                      u_dat.line_flag = 1;
 200   2                      _nop_();
 201   2              }
 202   1      }
 203          
 204          void Stop_Cfg(void)
 205          {
 206   1              u8 Read;
 207   1              Read = xSYSCFG;
 208   1              Read &= ~(1<<4|1);//WDTCFG,RCLCFG
 209   1              Read |= (0<<4)|1;
 210   1              xSYSCFG = Read;
 211   1              
 212   1              Read = xSTOPCFG;
 213   1              Read &= ~(1<<3|1<<1);
 214   1              Read |= (1<<3) | (1<<1);
 215   1              xSTOPCFG = Read;
 216   1      }
 217          
 218          void stop_mode(void)
 219          {
 220   1              LVRCON &= ~(1<<7); // close VBG
 221   1              //WTCON = 0x80; // enable WT
 222   1      //      xVREGCFG |= 1<<3; //enable LDO
 223   1              Stop_Cfg(); // open RCL in stop mode
 224   1              WPKEY = 0x37;   //disable write protect
 225   1              PCON |= 1<<1; // enter stop mode
 226   1              
 227   1      }
 228          
 229          
 230          void IO_DeInit(void)
 231          {
 232   1              //------------------------------        
 233   1              xGPIODS0 = 0xFF;        
 234   1              P0MDH = 0xFF;   
 235   1              P0MDL = 0xFF;
 236   1              P0        = 0x00;  
 237   1      //------------------------------        
 238   1              xGPIODS1 = 0xFF;        
 239   1              P1MDH = 0xFF;
 240   1              P1MDL = 0xFF;
C51 COMPILER V9.53.0.0   RCC                                                               07/14/2020 15:32:53 PAGE 5   

 241   1              P1    = 0x00;   
 242   1      //------------------------------
 243   1              xGPIODS2 = 0xFF;        
 244   1              P2MDH = 0xFF;
 245   1              P2MDL = 0xFF;   
 246   1              P2    = 0x00;
 247   1              
 248   1      //------------------------------
 249   1              xGPIODS3 = 0xFF;        
 250   1              P3MDH = 0xFF;
 251   1              P3MDL = 0xFF;
 252   1              P3    = 0x00;   
 253   1      
 254   1      
 255   1      //------------------------------
 256   1              xGPIODS4 = 0xFF;                
 257   1              xP4MDH = 0xFF;  
 258   1              xP4MDL = 0xFF;  
 259   1              P4     = 0x00;
 260   1      
 261   1      //------------------------------
 262   1      //      xGPIODS5 = 0xFF;                
 263   1      //      xP5MDH = 0xFF;  
 264   1      //      xP5MDL = 0xFF;  
 265   1      //      P5     = 0x00;
 266   1              
 267   1      //------------------------------
 268   1              xGPIODS9 = 0xFF;
 269   1              xP9MDH = 0xFF;
 270   1              xP9MDL = 0xFF;
 271   1              P9     = 0x00;
 272   1              
 273   1      //      xSYSCFG &= 0x7F;        //RTS change to general IO
 274   1      
 275   1      }
 276          
 277          void IO_Initailize(void)
 278          {
 279   1       
 280   1              GPIO_SET(P2MDL,GPIO_PP,1);// POWER              
 281   1              GPIO_SET(P3MDL,GPIO_OI,0);// BAT_V              
 282   1      //      GPIO_SET(P2MDL,GPIO_UI,0);// CHARGE_EN  
 283   1              GPIO_SET(P0MDL,GPIO_OI,1);// LINE_EN    
 284   1              GPIO_SET(P1MDL,GPIO_UI,0);// AB         
 285   1              GPIO_SET(P2MDL,GPIO_PP,0);// LED P20
 286   1      }
 287          
 288          
 289          
 290          
 291          
 292          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    612    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      1    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
C51 COMPILER V9.53.0.0   RCC                                                               07/14/2020 15:32:53 PAGE 6   

   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
