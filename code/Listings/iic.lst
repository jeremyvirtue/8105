C51 COMPILER V9.56.0.0   IIC                                                               03/29/2019 11:41:02 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE IIC
OBJECT MODULE PLACED IN .\Objects\iic.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE User\Drive\iic.c OMF2 OPTIMIZE(8,SPEED) BROWSE INCDIR(.\User;.\User\Driv
                    -e) DEBUG PRINT(.\Listings\iic.lst) TABS(2) OBJECT(.\Objects\iic.obj)

line level    source

   1          /************************INCLUDES ************************/
   2          #include "iic.h"
   3          /********************CONSTANTS ***************************/
   4          /********************END CONSTANTS ***********************/
   5          
   6          /********************MACROS ******************************/
   7          /********************END MACROS **************************/
   8          
   9          /********************TYPEDEFS ****************************/
  10          #define DEVICE_ADDR_CODEC   0x20
  11          #define DEVICE_ADDR_BIST    0XB6 //7'5B
  12          #define DEVICE_ADDR_OTP     0XA4 //7'52
  13          
  14          #define DEVICE_DSP0_ADDR     0XB0    // KT070x
  15          
  16          /********************END TYPEDEFS ************************/
  17          
  18          /********************GOLABLE VARIABLES *******************/
  19          
  20          
  21          #define SCL    P41
  22          
  23          #define SDA    P42
  24          
  25          
  26          #define SCL_OUT  GPIO_SET(xP4MDL,GPIO_PP,1)
  27          
  28          #define SDA_IN   GPIO_SET(xP4MDL,GPIO_UI,2)
  29          #define SDA_OUT  GPIO_SET(xP4MDL,GPIO_PP,2)
  30          
  31          
  32          static void DSPBusDelay(void  )
  33          {
  34   1        u8 i;
  35   1        for(i=0;i<=10;i++)
  36   1        {
  37   2         _nop_();
  38   2        }
  39   1      }
  40          
  41          /*        总线开始
  42          * 
  43          * 
  44          * 
  45          */
  46          static void DSPBusStart(void)
  47          {
  48   1        SCL_OUT;    
  49   1        SDA_OUT;
  50   1        
  51   1        DSPBusDelay();DSPBusDelay();
  52   1        SDA = 1;
  53   1        DSPBusDelay();DSPBusDelay();
  54   1        SCL = 1;
C51 COMPILER V9.56.0.0   IIC                                                               03/29/2019 11:41:02 PAGE 2   

  55   1        DSPBusDelay();DSPBusDelay();
  56   1        SDA = 0;
  57   1        DSPBusDelay();DSPBusDelay();
  58   1        SCL = 0;
  59   1        DSPBusDelay();DSPBusDelay();
  60   1      }
  61          
  62          /*        总线发送字节数据
  63          * 
  64          * 
  65          * 
  66          */
  67          static void DSPTxByte(u8 senddata)
  68          {
  69   1        u8 i;
  70   1        for (i=0;i<8;i++)
  71   1        { 
  72   2         DSPBusDelay();
  73   2         if ((senddata & 0x80) != 0x80)
  74   2          SDA = 0;
  75   2         else SDA = 1;
  76   2          senddata = senddata << 1;
  77   2          DSPBusDelay();
  78   2          SCL = 1;
  79   2          DSPBusDelay();
  80   2          SCL = 0;
  81   2        }
  82   1        DSPBusDelay();
  83   1      }
  84          /*        总线接收字节数据
  85          * 
  86          * 
  87          * 
  88          */
  89          static u8 DSPRxByte(void)
  90          {
  91   1        u8 i,temp,receivedata=0;
  92   1        u16 count=0;
  93   1        SDA_IN;
  94   1        for (i=0;i<8;i++)
  95   1        {
  96   2           DSPBusDelay();
  97   2           SCL = 1;  
  98   2           do
  99   2           {
 100   3             DSPBusDelay();
 101   3             count++;
 102   3           }while((!SCL)&&(count<10000));                   // Wait for KT070x I2C Idle          Add 2018.5.29
 103   2           temp = SDA;
 104   2           SCL = 0;
 105   2           receivedata = receivedata | temp;
 106   2           if (i<7)
 107   2           {
 108   3             receivedata = receivedata << 1;
 109   3           }
 110   2        }
 111   1        DSPBusDelay();
 112   1        SDA_OUT;
 113   1        return(receivedata);  
 114   1      }
 115          /*        总线响应
 116          * re:SET-有应答   RESET-无应答
C51 COMPILER V9.56.0.0   IIC                                                               03/29/2019 11:41:02 PAGE 3   

 117          * 
 118          * 
 119          */
 120          static FlagStatus DSPBusAck(void)
 121          {
 122   1        FlagStatus re=RESET;
 123   1        SDA_OUT;
 124   1        SDA = 1;
 125   1        SDA_IN;
 126   1        DSPBusDelay();DSPBusDelay();
 127   1        SCL = 1;
 128   1        DSPBusDelay();
 129   1        re= (FlagStatus)SDA;
 130   1        SCL = 0;
 131   1        DSPBusDelay();DSPBusDelay();
 132   1          SDA_OUT;
 133   1        return !re;
 134   1      }
 135          /*        总线主机响应
 136          * 
 137          * 
 138          * 
 139          */
 140          static void DSPMaskerAck(void)
 141          {
 142   1        SCL_OUT;
 143   1        SDA_OUT;
 144   1        SDA = 0;
 145   1        DSPBusDelay();DSPBusDelay();
 146   1        SCL = 1;
 147   1        DSPBusDelay();DSPBusDelay();
 148   1        SCL = 0;
 149   1        DSPBusDelay();DSPBusDelay();
 150   1        SDA = 1;
 151   1      }
 152          /*        总线主机不响应
 153          * 
 154          * 
 155          * 
 156          */
 157          static void DSPMaskerNoAck(void)
 158          {
 159   1        SCL_OUT;
 160   1        SDA_OUT;
 161   1        SDA = 1;
 162   1        DSPBusDelay();DSPBusDelay();
 163   1        SCL = 1;
 164   1        DSPBusDelay();DSPBusDelay();
 165   1        SCL = 0;
 166   1        DSPBusDelay();DSPBusDelay();
 167   1        SDA = 1;
 168   1      }
 169          /*        总线结束
 170          * 
 171          * 
 172          * 
 173          */
 174          static void DSPBusStop(void)
 175          {
 176   1        SCL_OUT;
 177   1        SDA_OUT;
 178   1        SCL = 0;
C51 COMPILER V9.56.0.0   IIC                                                               03/29/2019 11:41:02 PAGE 4   

 179   1        DSPBusDelay();DSPBusDelay();
 180   1        SDA = 0;
 181   1        DSPBusDelay();DSPBusDelay();
 182   1        SCL = 1;
 183   1        DSPBusDelay();DSPBusDelay();
 184   1        SDA = 1;
 185   1        DSPBusDelay();DSPBusDelay();
 186   1      }
 187          /*        总线忙检测
 188          * 
 189          * 
 190          * 
 191          */
 192          static void DSPBusBusy(void)
 193          {
 194   1        DSPBusStart();
 195   1        DSPTxByte(DEVICE_DSP0_ADDR);              // 
 196   1         
 197   1        if (DSPBusAck())
 198   1        {
 199   2          DSPTxByte(0);
 200   2           
 201   2          if (DSPBusAck())
 202   2          {
 203   3            DSPTxByte(0);
 204   3             
 205   3            if (DSPBusAck())
 206   3            {
 207   4              DSPBusStart();
 208   4              DSPTxByte(DEVICE_DSP0_ADDR|0x01);
 209   4               
 210   4              if (DSPBusAck())
 211   4              {
 212   5                DSPRxByte();
 213   5                DSPMaskerNoAck();
 214   5                DSPBusStop();
 215   5              }
 216   4              else
 217   4              {
 218   5                DSPBusStop();
 219   5              }
 220   4            }
 221   3            else
 222   3            {
 223   4              DSPBusStop();
 224   4            }
 225   3          }
 226   2          else
 227   2          {
 228   3            DSPBusStop();
 229   3          }     
 230   2        }
 231   1        else
 232   1        {
 233   2          DSPBusStop();
 234   2        }
 235   1      }
 236          
 237          
 238          /*        设备写数据
 239          * Addr:设备地址
 240          * WData:数据
C51 COMPILER V9.56.0.0   IIC                                                               03/29/2019 11:41:02 PAGE 5   

 241          */
 242           void DSPWrite(u16 Addr, u32 WData)
 243           {
 244   1        u8 addr1, addr0;
 245   1        u8 wdata3, wdata2, wdata1, wdata0;
 246   1         
 247   1        // Check I2C Busy       Add 2019.1.28 for I2C V1E, 注意此处可以用函数I2C_ReadReg_DW()代替.
 248   1        DSPBusBusy();                  
 249   1        
 250   1        addr1 = Addr >> 8;
 251   1        addr0 = Addr >> 0;
 252   1      
 253   1        wdata3 = WData >> 24;
 254   1        wdata2 = WData >> 16;
 255   1        wdata1 = WData >> 8;
 256   1        wdata0 = WData >> 0;
 257   1        
 258   1        DSPBusStart();
 259   1        DSPTxByte(DEVICE_DSP0_ADDR);
 260   1         
 261   1        if (DSPBusAck())
 262   1        {
 263   2          DSPTxByte(addr1);
 264   2           
 265   2          if (DSPBusAck())
 266   2          {
 267   3            DSPTxByte(addr0);
 268   3             
 269   3            if (DSPBusAck())
 270   3            {
 271   4              DSPTxByte(wdata3);
 272   4               
 273   4              if (DSPBusAck())
 274   4              {
 275   5                DSPTxByte(wdata2);
 276   5                 
 277   5                if (DSPBusAck())
 278   5                {
 279   6                  DSPTxByte(wdata1);
 280   6                   
 281   6                  if (DSPBusAck())
 282   6                  {
 283   7                    DSPTxByte(wdata0);
 284   7                    DSPBusAck();
 285   7                  }
 286   6                  else
 287   6                    SCL = 0;      
 288   6                }
 289   5                else
 290   5                  SCL = 0;      
 291   5              }
 292   4              else
 293   4                SCL = 0;      
 294   4            }
 295   3            else
 296   3              SCL = 0;          
 297   3          }
 298   2          else
 299   2            SCL = 0;      
 300   2        }
 301   1        else
 302   1          SCL = 0;
C51 COMPILER V9.56.0.0   IIC                                                               03/29/2019 11:41:02 PAGE 6   

 303   1      
 304   1        DSPBusStop();
 305   1       }
 306          /*        读设备的数据
 307          * 
 308          * Addr:设备上的寄存器地址
 309          * 
 310          */
 311           u32 DSPRead(u16 Addr)
 312           {
 313   1        u8 addr1, addr0;
 314   1        u8 rdata3, rdata2, rdata1, rdata0;
 315   1        u32 RData;  
 316   1        addr1 = Addr >> 8;
 317   1        addr0 = Addr >> 0;
 318   1        DSPBusStart();
 319   1        DSPTxByte(DEVICE_DSP0_ADDR);
 320   1         
 321   1        if (DSPBusAck())
 322   1        {
 323   2          DSPTxByte(addr1);
 324   2           
 325   2          if (DSPBusAck())
 326   2          {
 327   3            DSPTxByte(addr0);
 328   3             
 329   3            if (DSPBusAck())
 330   3            {
 331   4              DSPBusStart();
 332   4              DSPTxByte(DEVICE_DSP0_ADDR|0x01);
 333   4               
 334   4              if (DSPBusAck())
 335   4              {
 336   5                SDA_IN;
 337   5                rdata3 = DSPRxByte();
 338   5                DSPMaskerAck();
 339   5                rdata2 = DSPRxByte();
 340   5                DSPMaskerAck();
 341   5                rdata1 = DSPRxByte();
 342   5                DSPMaskerAck();
 343   5                rdata0 = DSPRxByte();
 344   5                DSPBusAck();
 345   5                DSPBusStop();
 346   5                RData = ((u32)rdata3 << 24) | ((u32)rdata2 << 16) | ((u32)rdata1 << 8) | rdata0;
 347   5                return(RData);
 348   5              }
 349   4              else
 350   4              {
 351   5                DSPBusStop();
 352   5                return(0x00);
 353   5              }
 354   4            }
 355   3            else
 356   3            {
 357   4              DSPBusStop();
 358   4              return(0x00);
 359   4            }
 360   3          }
 361   2          else
 362   2          {
 363   3            DSPBusStop();
 364   3            return(0x00);
C51 COMPILER V9.56.0.0   IIC                                                               03/29/2019 11:41:02 PAGE 7   

 365   3          }     
 366   2        }
 367   1        else
 368   1        {
 369   2          DSPBusStop();
 370   2          return(0x00);
 371   2        }
 372   1       }
 373           /*****************END ************************************/
 374          
 375          /***************************** End Of File ************************************/


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    776    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      11
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
